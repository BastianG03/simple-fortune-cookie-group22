name: Go Build & Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
      - name: Build backend
        run: cd backend && go build
      - name: Build frontend
        run: cd frontend && go build
      - name: Test frontend
        run: cd frontend && go test
  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download
        uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build-docker-image backend
        run: cd backend && docker build -t ghcr.io/bastiang03/backend:latest .
      - name: push docker image backend
        run: docker push ghcr.io/bastiang03/backend:latest
      - name: build docker image frontend
        run: cd frontend && docker build -t ghcr.io/bastiang03/frontend:latest .
      - name: push docker image frontend
        run: docker push ghcr.io/bastiang03/frontend:latest
  deploy-to-Kubernetes:
      runs-on: ubuntu-latest
      needs: [build, docker-build]
      steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install kubectl
        run: sudo apt-get install -y kubectl
      - name: Setup kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Deploy manifests
        run: |
          kubectl --kubeconfig kubeconfig apply -f manifests/
  deploy-test:
    runs-on: ubuntu-latest
    needs: deploy-to-Kubernetes
    steps:
      - uses: actions/checkout@v3
      - name: Setup kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Deploy test backend
        run: kubectl --kubeconfig kubeconfig apply -f testing/
      - name: Wait for rollout
        run: kubectl --kubeconfig kubeconfig rollout status deployment/backend-test --timeout=60s
      - name: Port forward test service
        run: |
          kubectl --kubeconfig kubeconfig port-forward svc/backend-test 8081:80 & sleep 10
      - name: Run health check
        run: ./test_app.sh http://localhost:8081/healthz
      - name: Cleanup test deployment
        if: always()
        run: kubectl --kubeconfig kubeconfig delete -f testing/
